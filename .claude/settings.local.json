{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "WebFetch(domain:en.wikipedia.org)",
      "WebFetch(domain:github.com)",
      "Bash(mkdir:*)",
      "Bash(cd:*/spiral-core*)",
      "Bash(npm install:*)",
      "Bash(npx chokidar:*)",
      "Bash(cargo check:*)",
      "Bash(cargo test)",
      "Bash(cargo run)",
      "Bash(cargo run --bin spiral-core)",
      "Bash(cargo clippy:*)",
      "Bash(cargo test:*)",
      "Bash(tokei:*)",
      "Bash(rm:*)",
      "mcp__ide__getDiagnostics",
      "Bash(cargo:*)",
      "Bash(RUST_LOG=debug cargo run --bin spiral-core)",
      "Bash(pkill:*)",
      "Bash(ls:*)",
      "Bash(cp:*)",
      "Bash(chmod:*)",
      "Bash(./test-api.sh:*)",
      "Bash(brew install:*)",
      "Bash(docker build:*)",
      "Bash(mv:*)",
      "Bash(timeout 120 docker build -f Dockerfile . --tag spiral-test --no-cache)",
      "Bash(gtimeout:*)",
      "Bash(docker run:*)",
      "Bash(./test-container.sh:*)",
      "Bash(time docker build:*)",
      "Bash(grep:*)",
      "Bash(npx markdownlint:*)",
      "Bash(markdownlint:*)",
      "Bash(npx husky:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm audit:*)",
      "Bash(npm ls:*)",
      "Bash(npm run lint:md:*)",
      "Bash(npm run test:docs:*)",
      "Bash(npm run format:md:*)",
      "Bash(RUST_BACKTRACE=1 cargo test claude_code::tests::unit::test_api_url_validation --lib -- --nocapture)",
      "Bash(hurl:*)",
      "Bash(curl:*)",
      "Bash(./scripts/run-hurl-tests.sh:*)",
      "Bash(nohup cargo run --bin spiral-core > server.log 2>&1 &)",
      "Bash(scripts/test-api-hurl.sh:*)",
      "Bash(cat:*)",
      "Bash(./scripts/verify-spiral-core.sh:*)",
      "Bash(source:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(timeout:*)",
      "Bash(rustc:*)",
      "Bash(git add:*)",
      "Bash(./scripts/kill-server.sh:*)",
      "Read(path:**/*.rs)",
      "Edit(path:**/*.rs)",
      "Read(path:**/*.md)",
      "Edit(path:**/*.md)",
      "Read(path:**/Cargo.toml)",
      "Edit(path:**/Cargo.toml)",
      "Read(path:**/Cargo.lock)",
      "Edit(path:**/Cargo.lock)",
      "Bash(sed:*)",
      "Bash(RUST_BACKTRACE=1 cargo test discord::intent_classifier::tests::test_adversarial_input_handling -- --nocapture)"
    ],
    "deny": [
      "Bash(npm install -g:*)",
      "Bash(sudo npm install -g:*)",
      "Bash(rm -rf /:*)",
      "Bash(rm -rf /*:*)",
      "Bash(rm -rf ~/*:*)",
      "Bash(rm -rf $HOME:*)",
      "Bash(dd if=/dev/zero:*)",
      "Bash(mkfs.*:*)",
      "Bash(sudo chown -R:*)",
      "Bash(sudo chmod -R 777:*)",
      "Bash(sudo chmod -R 755 /etc:*)",
      "Bash(sudo killall -9:*)",
      "Bash(sudo reboot:*)",
      "Bash(sudo shutdown:*)",
      "Bash(sudo halt:*)",
      "Bash(sudo systemctl stop:*)",
      "Bash(sudo service stop:*)",
      "Bash(sudo iptables -F:*)",
      "Bash(sudo ufw disable:*)",
      "Bash(sudo setenforce:*)",
      "Bash(sudo passwd:*)",
      "Bash(sudo visudo:*)",
      "Bash(sudo apt-get remove --purge:*)",
      "Bash(sudo yum remove:*)",
      "Bash(sudo brew uninstall --force:*)",
      "Bash(fdisk:*)",
      "Bash(parted:*)",
      "Bash(gparted:*)",
      "Bash(sudo umount -f:*)",
      "Bash(find / -delete:*)",
      "Bash(find /etc -exec rm:*)",
      "Bash(chmod -R 000:*)"
    ]
  }
}